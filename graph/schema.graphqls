type Query {
  actor: Actor!
  organization(id: ID!): Organization
}

type Mutation {
  doSomething(task: String!): String!
}

type Actor {
  backingApiUrl: String!
  apiKey: String!
  test: String!
}

type Organization {
  id: ID!
  name: String!
  project(id: ID!): Project!
}

type Project {
  id: ID!
  name: String!
  alerts: [Alert!]
  alert(id: ID!): Alert
}

type Label {
  key: String!
  value: String!
}

type Alert {
  id: ID!
  name: String!
  description: String!
  labels: [Label]
  enableNoDataAlert: Boolean
  enableNoDataDuration: Int
  operand: String
  warningThreshold: Float
  criticalThreshold: Float
}
